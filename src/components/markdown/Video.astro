---
interface Props {
  src: string;
}

const { src } = Astro.props;
---

<div class="flex flex-col items-center justify-center">
  <lazyload-video src={src}>
    <video autoplay muted loop playsinline class="h-[640px]"></video>
  </lazyload-video>
</div>

<script>
  class LazyLoadVideoElement extends HTMLElement {
    constructor() {
      super();
      const src = this.getAttribute("src");
      if (!src) {
        throw new Error("src attribute is required");
      }

      const video = document.querySelector("video");
      if (!video) {
        throw new Error("video element is required");
      }

      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            if (!video.src) {
              video.src = src;
            }
            video.load();
            video.play();
            observer.unobserve(video);
          }
        });
      });
      observer.observe(video);
    }
  }

  customElements.define("lazyload-video", LazyLoadVideoElement);
</script>
